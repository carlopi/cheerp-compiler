version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: large
    steps:
      - run: sudo apt-get update && sudo apt-get install -y debhelper cmake python3-distutils ninja-build clang lld devscripts
      - checkout:
          path: cheerp-compiler
      - run:
          name: build-cheerp-compiler
          working_directory: ~/project/cheerp-compiler
          command: |
            echo "hi" >> ../test.txt
      # - run:
      #     name: build-cheerp-compiler
      #     working_directory: ~/project/cheerp-compiler
      #     command: |
      #       export NINJA_STATUS="[%u/%r/%f] "
      #       dch -b -v 0-latest-1 "Internal build" -m
      #       dpkg-buildpackage -b
      #       mv ../cheerp-llvm-clang_*.deb ../cheerp-llvm-clang_latest.deb
      - store_artifacts:
          path: ~/project/test.txt
          destination: cheerp-compiler-artifact
      - run:
          name: trigger-conditional-job
          command: |
            curl -X POST https://circleci.com/api/v2/project/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pipeline \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --header "Circle-Token: $CIRCLE_TOKEN" \
            -d '{ "branch": "'"$CIRCLE_BRANCH"'", "parameters":{"run_build":false, "build_num": "'"$CIRCLE_BUILD_NUM"'"}}'
  conditional_job:
    docker:
      - image: cimg/base:2021.04
    resource_class: medium
    steps:
      - run: echo "I've ran!"
      - run:
          name: get-artifact
          command: |
            curl -H "Circle-Token: $CIRCLE_TOKEN" \
            https://circleci.com/api/v2/project/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/<< pipeline.parameters.build_num >>/artifacts \
            | grep -o 'https://[^"]*' \
            | wget --verbose --header "Circle-Token: $CIRCLE_TOKEN" --input-file -
      - run: ls

parameters:
  build_num:
    type: string
    default: ""
  run_build:
    type: boolean
    default: true

workflows:
  cheerp-compiler-monorepo:
    when:
      and:
        - << pipeline.parameters.run_build >>
        - equal [ << pipeline.parameters.build_num >>, "" ]
    jobs:
      - build:
          filters:
            branches:
              only:
                - circle-ci
  conditional_wf:
    unless:
      equal: [ << pipeline.parameters.build_num >>, "" ]
    jobs:
      - conditional_job
