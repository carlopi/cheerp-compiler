version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: large
    steps:
      - run: sudo apt-get update && sudo apt-get install -y debhelper cmake python3-distutils ninja-build clang lld devscripts
      - checkout:
          path: cheerp-compiler
      - run:
          name: build-cheerp-compiler
          working_directory: ~/project/cheerp-compiler
          command: |
            export NINJA_STATUS="[%u/%r/%f] "
            dch -b -v 0-latest-1 "Internal build" -m
            dpkg-buildpackage -b
            mkdir tmp
            dpkg -x ../cheerp-llvm-clang_*.deb tmp
            mv ../cheerp-llvm-clang_*.deb ../cheerp-llvm-clang_latest.deb
            sudo mkdir /opt/cheerp/
            sudo cp -rv tmp/opt/cheerp/* /opt/cheerp
            rm -rf tmp
      - store_artifacts:
          path: ~/project/cheerp-llvm-clang_latest.deb
          destination: cheerp-compiler-artifact
  test_trigger:
    docker:
      - image: cimg/base:2021.04
    resource_class: medium
    steps:
      - run:
          name: trigger-conditional-job
          command: |
            curl -X POST https://circleci.com/api/v2/project/gh/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pipeline \
            --header 'Content-Type: application/json' \
            --header 'Accept: application/json' \
            --header "Circle-Token: $CIRCLE_TOKEN" \
            -d '{ "branch": "'"$CIRCLE_BRANCH"'", "parameters":{"run_test_trigger":false, "run_conditional_job":true}}'
  conditional_job:
    docker:
      - image: cimg/base:2021.04
    resource_class: medium
    steps:
      - run: echo "I've ran!"
      - run: exit 0

parameters:
  run_test_trigger:
    type: boolean
    default: true
  run_conditional_job:
    type: boolean
    default: false

workflows:
  # cheerp-compiler-monorepo:
  #   jobs:
  #     - build:
  #         filters:
  #           branches:
  #             only:
  #               - circle-ci
  trigger-pipeline:
    when: << pipeline.parameters.run_test_trigger >>
    jobs:
      - test_trigger:
          filters:
            branches:
              only:
                - circle-ci
  conditional_wf:
    when: << pipeline.parameters.run_conditional_job >>
    jobs:
      - conditional_job
